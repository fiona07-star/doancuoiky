import random
import string
from PyQt6.QtWidgets import QMessageBox, QMainWindow, QApplication

from Spydecat_K24406H.libs.Dataconnector import DataConnector
from Spydecat_K24406H.ui.LoginMainWindowCanbo import Ui_MainWindow_can_bo_dang_nhap
from Spydecat_K24406H.ui.MainWindowCanboExt import MainWindowCanboExt


class LoginMainWindowCanboExt(Ui_MainWindow_can_bo_dang_nhap):
    def setupUi(self, MainWindow):
        super().setupUi(MainWindow)
        self.MainWindow = MainWindow
        self.setupSignalAndSlot()
        self.MainWindow.show()  #Hi·ªÉn th·ªã tr∆∞·ªõc khi c·∫≠p nh·∫≠t UI
        self.generate_captcha()  #T·∫°o captcha khi m·ªü giao di·ªán

    def showWindow(self):
        self.MainWindow.show()

    def setupSignalAndSlot(self):
        self.pushButtonLogin.clicked.connect(self.process_login)
        self.pushButtonExit.clicked.connect(self.thoat)
        self.pushButtonCaptcha.clicked.connect(self.generate_captcha)  # L√†m m·ªõi captcha

    def generate_captcha(self):
        """T·∫°o Captcha m·ªõi v√† c·∫≠p nh·∫≠t giao di·ªán"""
        characters = string.ascii_letters + string.digits  # Ch·ªØ hoa, ch·ªØ th∆∞·ªùng, s·ªë
        self.captcha_text = ''.join(random.choices(characters, k=6))  # Captcha 6 k√Ω t·ª±
        print(f"üîπ Captcha m·ªõi: {self.captcha_text}")  # Debug ki·ªÉm tra

        # Hi·ªÉn th·ªã Captcha trong `lineEditCaptcha` (Kh√¥ng cho s·ª≠a)
        self.lineEditCaptcha.setText(self.captcha_text)
        self.lineEditCaptcha.setReadOnly(True)

        # X√≥a √¥ nh·∫≠p Captcha c≈© c·ªßa ng∆∞·ªùi d√πng
        self.lineEditEnterCaptcha.clear()
        self.lineEditEnterCaptcha.setFocus()  # Chuy·ªÉn con tr·ªè nh·∫≠p v√†o ƒë√¢y

    def thoat(self):
        msgbox = QMessageBox(self.MainWindow)
        msgbox.setText("B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t?")
        msgbox.setWindowTitle("X√°c nh·∫≠n tho√°t")
        msgbox.setIcon(QMessageBox.Icon.Warning)
        buttons = QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        msgbox.setStandardButtons(buttons)

        if msgbox.exec() == QMessageBox.StandardButton.Yes:
            QApplication.quit()

    def process_login(self):
        dc = DataConnector()
        uid = self.lineEditEmail.text().strip()
        pwd = self.lineEditPassword.text().strip()
        user_captcha = self.lineEditEnterCaptcha.text().strip()  # Captcha ng∆∞·ªùi nh·∫≠p
        real_captcha = self.captcha_text  # Captcha h·ªá th·ªëng sinh

        # N·∫øu Captcha nh·∫≠p sai, d·ª´ng ngay l·∫≠p t·ª©c
        if user_captcha != real_captcha:
            QMessageBox.warning(self.MainWindow, "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i", "Captcha kh√¥ng ƒë√∫ng! Vui l√≤ng th·ª≠ l·∫°i.")
            self.generate_captcha()  # L√†m m·ªõi Captcha khi sai
            return  # D·ª´ng l·∫°i, kh√¥ng ki·ªÉm tra ti·∫øp

        # N·∫øu Captcha ƒë√∫ng, ki·ªÉm tra t√†i kho·∫£n
        emp = dc.login(uid, pwd)

        if emp is not None:
            self.MainWindow.close()  # ƒê√≥ng c·ª≠a s·ªï ƒëƒÉng nh·∫≠p

            # M·ªü MainWindowCanboExt
            self.new_window = QMainWindow()
            self.ui = MainWindowCanboExt()  # D√πng l·ªõp m·ªü r·ªông
            self.ui.setupUi(self.new_window)  # Kh·ªüi t·∫°o giao di·ªán
            self.new_window.show()  # Hi·ªÉn th·ªã c·ª≠a s·ªï ch√≠nh
        else:
            QMessageBox.warning(self.MainWindow, "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i", "Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!")

